{"title":"Part 1 | Lua语言基础","date":"2020-10-29T16:51:00.000Z","date_formatted":{"ll":"2020年10月29日","L":"2020/10/29","MM-DD":"10-29"},"author":"Sua-CQY","link":"2020/10/29/Lua语言基础","comments":true,"tags":["Lua学习笔记"],"updated":"2021-01-25T09:02:46.911Z","content":"<a id=\"more\"></a>\n\n<h2 id=\"一、简述\">一、简述<a href=\"#一、简述\" title=\"一、简述\"></a></h2><p>从2018年10月开始学习Lua语言，主要运用于<a href=\"http://www.openluat.com/welcome\" target=\"_blank\">合宙</a>二次开发的产品开发。前期都是开发没有及时的总结、系统的学习Lua语言的知识体系，对Lua只是处于知其然，不知其所以然的状态。现在有比较多的碎片化时间去学习总结，因此从梅隆魁所译的《Lua程序设计》第四版开始入手学习总结出我所认为的重点与知识点，希望对后期的运用有所帮助。</p>\n<p>最笼统的认识要从每本书的序言开始，序言对Lua的描述是：被游戏行业所广泛运用的“胶水语言”，最著名的莫过于魔兽世界。Lua是嵌入式的脚本语言，特点是轻量、高效、简单，可扩展等，它可独立进行编程，也可作为一个库嵌入到其他宿主语言的应用程序中。Lua语言还有一个特点是一种动态类型的语言，它没有类型定义，每个值都带有自身的类型信息。</p>\n<h2 id=\"二、在win的编译环境安装\">二、在Win的编译环境安装<a href=\"#二、在win的编译环境安装\" title=\"二、在Win的编译环境安装\"></a></h2><h3 id=\"（一）、-scite的ide\">（一）、 SciTE的IDE<a href=\"#（一）、-scite的ide\" title=\"（一）、 SciTE的IDE\"></a></h3><p>1.在<a href=\"https://www.scintilla.org/SciTEDownload.html\" target=\"_blank\">官网</a>下载<a href=\"https://www.scintilla.org/wscite445.zip\" target=\"_blank\">Full 64-bit download</a></p>\n<p>2.解压压缩包，安装SciTE</p>\n<h3 id=\"（二）、官网win的编译环境\">（二）、官网Win的编译环境<a href=\"#（二）、官网win的编译环境\" title=\"（二）、官网Win的编译环境\"></a></h3><ol><li><p>点击<a href=\"http://luabinaries.sourceforge.net/\" target=\"_blank\">Lua官网的下载区</a>，在<strong>History</strong>找到最新的下载包</p></li><li><p>点击[Tools Executables](<a href=\"https://sourceforge.net/projects/luabinaries/files/5.4.0/Tools\" target=\"_blank\">https://sourceforge.net/projects/luabinaries/files/5.4.0/Tools</a> Executables/)</p></li><li><p>选择lua-x.x.x_Win64_bin.zip，目前最新的下载包为[lua-5.4.0_Win64_bin.zip](<a href=\"https://sourceforge.net/projects/luabinaries/files/5.4.0/Tools\" target=\"_blank\">https://sourceforge.net/projects/luabinaries/files/5.4.0/Tools</a> Executables/lua-5.4.0_Win64_bin.zip/download)</p></li><li><p>在目录中解压压缩包到自定义目录，为1.解压区样式，若只安装了这一版lua编辑器，即可将命名改成2.修改区样式。（dll文件不要修改，否则cmd会报错）</p></li></ol><p><img src=\"解压修改.png\" class=\"φcy\"></p>\n<p>5.将目录加入环境变量中，按Win-&gt;输入<strong>环境变量</strong>-&gt;点击<strong>编辑系统环境变量</strong>-&gt;点击<strong>环境变量</strong>-&gt;选择<strong>系统变量</strong>中的<strong>Path</strong>-&gt;点击<strong>编辑</strong>-&gt;添加解压包根目录-&gt;确定-&gt;确定<img src=\"添加环境变量.png\"></p>\n<p>6.添加完毕，Win+R，输入cmd调出命令行，若第四步没有修改，输入luaxx（如第四步图lua54）回车，如果修改成lua则输入lua回车，显示出版本号为成功。</p>\n<p><img src=\"cmd.jpg\" class=\"φcy\"></p>\n<h3 id=\"（三）、visual-studio-code\">（三）、Visual Studio Code<a href=\"#（三）、visual-studio-code\" title=\"（三）、Visual Studio Code\"></a></h3><ol><li>安装不赘述，官网下载安装包安装</li><li>必用：扩展插件、源代码管理器，可以上传代码到GitHub，并进行代码比对。</li><li>好用的扩展插件：</li></ol><ul><li>Chinese (Simplified) Language Pack for Visual Studio Codems</li><li>Code alignment</li><li>LuaCoderAssist</li><li>LUAT</li><li>vscode-lua</li><li>emLuaIDE</li></ul><h3 id=\"（四）、luaeditor\">（四）、LuaEditor<a href=\"#（四）、luaeditor\" title=\"（四）、LuaEditor\"></a></h3><ol><li>安装不赘述，百度下载安装包安装</li></ol><h2 id=\"三、第一个lua程序\">三、第一个Lua程序<a href=\"#三、第一个lua程序\" title=\"三、第一个Lua程序\"></a></h2><p>1.程序Hello World!</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"Hello World!\"</span>)</span><br></pre></td></tr></tbody></table></figure>\n\n<p>2.cmd命令行的交互式编程模式</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\cqy1620&gt;lua -i</span><br><span class=\"line\">Lua <span class=\"number\">5.4</span><span class=\"number\">.0</span>  Copyright (C) <span class=\"number\">1994</span><span class=\"number\">-2020</span> Lua.org, PUC-Rio</span><br><span class=\"line\">&gt; <span class=\"built_in\">print</span>(<span class=\"string\">\"Hello World!\"</span>)</span><br><span class=\"line\">Hello World!</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>3.交互模式下dofile文件HelloWorld.lua</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\cqy1620&gt;lua</span><br><span class=\"line\">Lua <span class=\"number\">5.4</span><span class=\"number\">.0</span>  Copyright (C) <span class=\"number\">1994</span><span class=\"number\">-2020</span> Lua.org, PUC-Rio</span><br><span class=\"line\">&gt; <span class=\"built_in\">dofile</span>(<span class=\"string\">\"c:\\\\Users\\\\cqy1620\\\\Desktop\\\\HelloWorld.lua\"</span>)</span><br><span class=\"line\">Hello World!</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>4.命令行输入命令脚本编程，执行HelloWorld.lua</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\cqy1620&gt;cd \\Users\\cqy1620\\Desktop</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\cqy1620\\Desktop&gt;lua HelloWorld.lua</span><br><span class=\"line\">Hello World!</span><br></pre></td></tr></tbody></table></figure>\n\n<p>注：Ctrl+Z退出交互模式，回到命令行状态</p>\n<p>5.杰斌教学:输出重定向</p>\n<ul><li>C:\\Users\\cqy1620\\Desktop\\HelloWorld.lua运行前</li></ul><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(\"Hello World!\")</span><br></pre></td></tr></tbody></table></figure>\n\n<ul><li>cmd命令行输入</li></ul><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\cqy1620&gt;echo \"Hello world\" &gt;&gt; C:\\Users\\cqy1620\\Desktop\\HelloWorld.lua</span><br></pre></td></tr></tbody></table></figure>\n\n<ul><li>结果：C:\\Users\\cqy1620\\Desktop\\HelloWorld.lua运行后</li></ul><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"Hello World!\"</span>)</span><br><span class=\"line\"><span class=\"string\">\"Hello world\"</span></span><br></pre></td></tr></tbody></table></figure>\n\n<h2 id=\"四、语法基础\">四、语法基础<a href=\"#四、语法基础\" title=\"四、语法基础\"></a></h2><ol><li><strong>注释</strong></li></ol><ul><li>单行注释：–</li><li>多行注释：</li></ul><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">第一种多行注释</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">第二种多行注释</span></span><br><span class=\"line\"><span class=\"comment\">--]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">---[[  -- 类似单行注释</span></span><br><span class=\"line\">重新启动多行注释</span><br><span class=\"line\"><span class=\"comment\">--]]   -- 类似单行注释</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>2.<strong>标识符</strong></p>\n<p>Lua 标示符不能以数字开头，是由字母、数字、下划线组成的字符串。Lua对大小写敏感，因此DATA和Date是不同的标识符。</p>\n<p>注意“下划线+大写字母”的标识符通常被Lua语言作为特殊用途，“下划线+小写字母”的标识符作为哑变量。例如：</p>\n<p> <strong><code>_VERSION:</code></strong> 一个包含有当前解释器版本号的全局变量。 当前这个变量的值为 “<code>Lua 5.4</code>“</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\cqy1620&gt;lua</span><br><span class=\"line\">Lua 5.4.0  Copyright (C) 1994-2020 Lua.org, PUC-Rio</span><br><span class=\"line\">&gt; _VERSION</span><br><span class=\"line\">Lua 5.4</span><br></pre></td></tr></tbody></table></figure>\n\n<p>**<code>哑变量：</code>**又称为<a href=\"https://www.bbsmax.com/A/q4zVbym9zK/\" target=\"_blank\">虚拟变量</a>、名义变量，就是没有现实意义，没啥用。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local filename = \"baiyin201904huadan.zip\"</span><br><span class=\"line\"> beginPos, endPos = string.find(filename, \".zip\")</span><br><span class=\"line\"> if endPos == string.len(filename) then</span><br><span class=\"line\">     print(\"beginPos : \" .. beginPos .. \" | endPos : \" .. endPos .. \" | len : \" .. string.len(filename))</span><br><span class=\"line\"> end</span><br><span class=\"line\"> </span><br><span class=\"line\"> print(\"-----------------------------------\")</span><br><span class=\"line\"> </span><br><span class=\"line\"> _, endPos = string.find(filename, \".zip\")</span><br><span class=\"line\"> if endPos == string.len(filename) then</span><br><span class=\"line\">     print(\"endPos : \" .. endPos .. \" | len : \" .. string.len(filename))</span><br><span class=\"line\"> end</span><br><span class=\"line\"> </span><br><span class=\"line\"> -- 输出</span><br><span class=\"line\"> --[[</span><br><span class=\"line\"> beginPos : 19 | endPos : 22 | len : 22</span><br><span class=\"line\"> -----------------------------------</span><br><span class=\"line\"> endPos : 22 | len : 22</span><br><span class=\"line\"> --]]</span><br></pre></td></tr></tbody></table></figure>\n\n<p>3.<strong>全局变量与局部变量</strong></p>\n<p>**<code>全局变量：</code>**全局变量不需要声明即可使用，访问一个没有初始化的全局变量也不会出错，其结果是：nil。如果要回收一个变量就赋值nil给他。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; a      -- 没有声明变量</span><br><span class=\"line\">nil</span><br><span class=\"line\">&gt; a=1    -- 赋值</span><br><span class=\"line\">&gt; a</span><br><span class=\"line\">1</span><br><span class=\"line\">&gt; a=nil   -- 回收变量</span><br><span class=\"line\">&gt; a</span><br><span class=\"line\">nil</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n<p>**<code>局部变量：</code>**局部变量生效的范围仅在他声明的代码块中，一个代码块是一个控制结构的主体、一个函数主体或者是一个代码段。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local i,x=1,10                  -- 这一代码块有效 </span><br><span class=\"line\">print(\"First print:\"..x)</span><br><span class=\"line\">if i&lt;x then</span><br><span class=\"line\">\tlocal x=100                 -- if判断语句中有效</span><br><span class=\"line\">\tprint(\"Second print:\"..x)   </span><br><span class=\"line\">else</span><br><span class=\"line\">\tprint(\"Third print:\"..x)    -- 全局变量</span><br><span class=\"line\">end</span><br><span class=\"line\">print(\"Fourth print:\"..x)       -- 全局变量</span><br><span class=\"line\"> -- 输出</span><br><span class=\"line\"> --[[</span><br><span class=\"line\"> First print:10</span><br><span class=\"line\"> Second print:100</span><br><span class=\"line\"> Fourth print:10</span><br><span class=\"line\"> --]]</span><br></pre></td></tr></tbody></table></figure>\n\n<p>4.<strong>类型</strong></p>\n<p>动态类型语言特点是不用定义类型，直接赋值即可使用。lua总共有8种基本类型：nil（空）、boolean（布尔）、number（数值）、string（字符串）、userdata（用户数据）、function（函数）、thread（线程） 和 table（表）。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type(nil)              --&gt; nil    </span><br><span class=\"line\">type(true)             --&gt; boolean</span><br><span class=\"line\">type(10.4*3)           --&gt; number</span><br><span class=\"line\">type(\"Hello world\")    --&gt; string</span><br><span class=\"line\">type(io.stdin)         --&gt; userdata</span><br><span class=\"line\">type(print)            --&gt; function</span><br><span class=\"line\">type(type)             --&gt; function           </span><br><span class=\"line\">type(type(X))          --&gt; string</span><br></pre></td></tr></tbody></table></figure>\n\n<p>注意：type返回的参数是string类型</p>\n","prev":{"title":"Part 2 | Lua语言基础","link":"2020/11/20/Lua语言基础2"},"next":{"title":"SK-121-4G-AT任务分配","link":"2020/10/21/SK-121P-4G-AT任务分配"},"plink":"http://yoursite.com/2020/10/29/Lua语言基础/"}