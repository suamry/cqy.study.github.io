{"title":"Lua学习总结","date":"2020-07-28T14:03:00.000Z","date_formatted":{"ll":"2020年7月28日","L":"2020/07/28","MM-DD":"07-28"},"author":"巧玉","link":"2020/07/28/Lua学习总结","comments":true,"tags":["Lua"],"updated":"2021-01-25T06:39:38.859Z","content":"<a id=\"more\"></a>\n\n<h2 id=\"一、简述\">一、简述<a href=\"#一、简述\" title=\"一、简述\"></a></h2><h3 id=\"11-缘由\">1.1 缘由<a href=\"#11-缘由\" title=\"1.1 缘由\"></a></h3><p>&nbsp;&nbsp;公司主要是以AT开发，所以杜老师想让我和大家说一下lua开发。lua开发大哥带的我，这边都没有人会，所以这个难得的机会被我遇到了。之前大概4月末左右杜老师就让我开始准备，准备到现在7月末了，我不是一般的拖拉。上周借开会的名义和同学们分享了两个多小时，我发现我也学到好多，进一步了解了lua，真的自己学不如给别人讲讲，越讲疑点越多，越多就会越思考。</p>\n<h3 id=\"12-邮件内容\">1.2 邮件内容<a href=\"#12-邮件内容\" title=\"1.2 邮件内容\"></a></h3><p>研发部前辈们：<br>             &nbsp;&nbsp;&nbsp;&nbsp;您们好！<br>            &nbsp;&nbsp;&nbsp;&nbsp;我是研发部的实习生陈巧玉，很荣幸获得这次机会能与大家分享我所学习、所认识的Lua语言，7月28日即今天晚上6:30在会议室中，若您感兴趣，可以来听一听，期待您的到来。</p>\n<p>   &nbsp;&nbsp;&nbsp;&nbsp;据了解，我司在合宙产品中最主要是用AT开发，相对于AT开发，Lua开发有以下几点优势：</p>\n<ol><li><p>Lua语言简单易学，容易上手，代码量小</p></li><li><p>API丰富供使用者调用，除了标准API，合宙方还支持许多拓展API</p></li><li><p>例程丰富，合宙提供大部分功能的例程，lib库也是完全开源的接口说明详细</p></li><li><p>合宙提供wiki网站、本地网页详细的对API参数、返回值等进行解释，并带有使用例子</p><p>相关学习链接</p></li><li><p>合宙模块Lua资料汇总：<a href=\"https://ask.openluat.com/article/1039\" target=\"_blank\">https://ask.openluat.com/article/1039</a></p></li><li><p>Lua菜鸟教程：<a href=\"https://www.runoob.com/lua/lua-tutorial.html\" target=\"_blank\">https://www.runoob.com/lua/lua-tutorial.html</a></p></li><li><p>Lua 5.3参考手册：<a href=\"https://www.runoob.com/manual/lua53doc/manual.html\" target=\"_blank\">https://www.runoob.com/manual/lua53doc/manual.html</a></p></li><li><p>bit位操作库说明：<a href=\"http://note.youdao.com/noteshare?id=59be98b8eadc12c417edb9310cb6e11f\" target=\"_blank\">http://note.youdao.com/noteshare?id=59be98b8eadc12c417edb9310cb6e11f</a></p><p>附件是今晚我要讲的PPT、我所整理的资料合集与需要分析的lua文件，希望对您有所帮助，谢谢！</p><p>如果您想进一步了解Lua语言，今晚6:30在会议室，期待您的出现。</p></li></ol><p>-——————————————————————————————-</p>\n<p>   &nbsp;&nbsp;&nbsp;&nbsp;此致<br>敬礼   </p>\n<h2 id=\"二、快速入门\">二、快速入门<a href=\"#二、快速入门\" title=\"二、快速入门\"></a></h2><h3 id=\"21-注释方法\">2.1 注释方法<a href=\"#21-注释方法\" title=\"2.1 注释方法\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 单行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">多行注释方法1</span></span><br><span class=\"line\"><span class=\"comment\">local a</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[</span></span><br><span class=\"line\"><span class=\"comment\">多行注释方法2</span></span><br><span class=\"line\"><span class=\"comment\">local a</span></span><br><span class=\"line\"><span class=\"comment\">--]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 灵活注释、解除注释，多加-即可取消注释，删除一个-即可注释这部分内容</span></span><br><span class=\"line\"><span class=\"comment\">---[[</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> a</span><br><span class=\"line\"><span class=\"comment\">--]]</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"22-基本类型\">2.2 基本类型<a href=\"#22-基本类型\" title=\"2.2 基本类型\"></a></h3><p>&nbsp;&nbsp;&nbsp;&nbsp;八种基本类型： nil、boolean、number、string、function、userdata、 thread 和 table</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 布尔类型为 true和false 那0是真还是假？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">\"0 is true\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">\"0 is false\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 输出</span><br><span class=\"line\">print(\"0 is true\")</span><br></pre></td></tr></tbody></table></figure>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;false和nil是false，其他true。</p>\n<h3 id=\"23-变量\">2.3 变量<a href=\"#23-变量\" title=\"2.3 变量\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 局部变量</span></span><br><span class=\"line\"><span class=\"comment\">-- 在被声明的代码块内有效，函数体内、所在文件内</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> a               <span class=\"comment\">-- 值为nil</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> a,b,c = <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>   <span class=\"comment\">-- 多重定义 a=1, b=2, c=3</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> tjsondata,result,errinfo = json.decode(<span class=\"built_in\">string</span>)  <span class=\"comment\">-- 多个返回值，逐一赋值</span></span><br><span class=\"line\"><span class=\"comment\">-- 全局变量</span></span><br><span class=\"line\">a = <span class=\"number\">1</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"23-数组与表\">2.3 数组与表<a href=\"#23-数组与表\" title=\"2.3 数组与表\"></a></h3><ul><li>数组：索引值为数字，递增且连续</li><li>table：索引可以为所以类型，除了nil</li><li>定义：local table_A = {}</li></ul><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 定义空表</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> table_A = {}  </span><br><span class=\"line\"><span class=\"keyword\">local</span> table_B = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- table_B中a索引为\"cmd\",table_A索引值为1</span></span><br><span class=\"line\"><span class=\"comment\">-- 表中能够嵌入表</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> table_B = {cmd=<span class=\"string\">\"a\"</span>,lb=<span class=\"string\">\"b\"</span>,acc=<span class=\"string\">\"c\"</span>,table_A}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 取表中的值有以下两种方法</span></span><br><span class=\"line\">table_B.cmd = <span class=\"string\">\"a\"</span></span><br><span class=\"line\">table_B[<span class=\"string\">\"cmd\"</span>] = <span class=\"string\">\"a\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 求数组长度：#</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(#table_A)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 引用来自：https://linux.cn/article-9810-1.html</span></span><br><span class=\"line\">t={}</span><br><span class=\"line\">t[{}] = <span class=\"string\">\"table\"</span>                 <span class=\"comment\">-- key 可以是表</span></span><br><span class=\"line\">t[<span class=\"number\">1</span>] = <span class=\"string\">\"int\"</span>                    <span class=\"comment\">-- key 可以是整数</span></span><br><span class=\"line\">t[<span class=\"number\">1.1</span>] = <span class=\"string\">\"double\"</span>               <span class=\"comment\">-- key 可以是小数</span></span><br><span class=\"line\">t[<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span> <span class=\"keyword\">end</span>] = <span class=\"string\">\"function\"</span> <span class=\"comment\">-- key 可以是函数</span></span><br><span class=\"line\">t[<span class=\"literal\">true</span>] = <span class=\"string\">\"Boolean\"</span>             <span class=\"comment\">-- key 可以是布尔值</span></span><br><span class=\"line\">t[<span class=\"string\">\"abc\"</span>] = <span class=\"string\">\"String\"</span>             <span class=\"comment\">-- key 可以是字符串</span></span><br><span class=\"line\">t[<span class=\"built_in\">io</span>.<span class=\"built_in\">stdout</span>] = <span class=\"string\">\"userdata\"</span>       <span class=\"comment\">-- key 可以是userdata</span></span><br><span class=\"line\">t[<span class=\"built_in\">coroutine</span>.<span class=\"built_in\">create</span>(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span> <span class=\"keyword\">end</span>)] = <span class=\"string\">\"Thread\"</span> <span class=\"comment\">-- key可以是thread</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(k,<span class=\"string\">\"-&gt;\"</span>,v)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"24-字符拼接\">2.4 字符拼接<a href=\"#24-字符拼接\" title=\"2.4 字符拼接\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a = <span class=\"string\">\"abc\"</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> b = <span class=\"string\">\"def\"</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a..b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--[[ 输出：</span></span><br><span class=\"line\"><span class=\"comment\">\t     abcdef</span></span><br><span class=\"line\"><span class=\"comment\">]]</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"25-函数定义\">2.5 函数定义<a href=\"#25-函数定义\" title=\"2.5 函数定义\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">function_name</span><span class=\"params\">()</span></span></span><br><span class=\"line\">\t<span class=\"comment\">-- body</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"26-if语句\">2.6 if语句<a href=\"#26-if语句\" title=\"2.6 if语句\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 格式1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> condition <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"comment\">-- body</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"comment\">-- body</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">-- 格式2</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> condition <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"comment\">-- body</span></span><br><span class=\"line\"><span class=\"keyword\">elseif</span> condition <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"comment\">-- body</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"27-while语句\">2.7 while语句<a href=\"#27-while语句\" title=\"2.7 while语句\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> condition <span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"comment\">-- statements</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"28-for语句\">2.8 for语句<a href=\"#28-for语句\" title=\"2.8 for语句\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 格式1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">10</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">-- 格式2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(table_name) <span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(i,v)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">-- 格式3</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(table_name) <span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(i,v)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"29-逻辑运算\">2.9 逻辑运算<a href=\"#29-逻辑运算\" title=\"2.9 逻辑运算\"></a></h3><ul><li>不等于 ：~=</li><li>与或非：and or not</li></ul><h3 id=\"210-拓展库\">2.10 拓展库<a href=\"#210-拓展库\" title=\"2.10 拓展库\"></a></h3><p>&nbsp;&nbsp;&nbsp;&nbsp;bit位操作、json编码与解码等</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bit.bnot 取反</span><br><span class=\"line\">bit.band 与操作</span><br><span class=\"line\">bit.bor 或操作</span><br><span class=\"line\">bit.bxor 异或操作</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"三、table嵌套\">三、table嵌套<a href=\"#三、table嵌套\" title=\"三、table嵌套\"></a></h2><h3 id=\"21-获取表中参数两种方式\">2.1 获取表中参数两种方式<a href=\"#21-获取表中参数两种方式\" title=\"2.1 获取表中参数两种方式\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Heart_Beat1 = </span><br><span class=\"line\">{</span><br><span class=\"line\">    cmd  = <span class=\"string\">\"CMD_HB_TX\"</span>,</span><br><span class=\"line\">    g    = <span class=\"string\">\"131\"</span>,</span><br><span class=\"line\">    data = </span><br><span class=\"line\">    {</span><br><span class=\"line\">        tim  = <span class=\"number\">12</span>,</span><br><span class=\"line\">        valt = <span class=\"number\">4.0</span>,</span><br><span class=\"line\">        csq  = <span class=\"number\">3</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat1.g)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat1.data.tim)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat1.data.csq)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat1[<span class=\"string\">\"g\"</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat1[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"tim\"</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat1[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"csq\"</span>])</span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"number\">131</span></span><br><span class=\"line\"><span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">131</span></span><br><span class=\"line\"><span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"number\">3</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"22-table嵌套\">2.2 table嵌套<a href=\"#22-table嵌套\" title=\"2.2 table嵌套\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> table_A = {</span><br><span class=\"line\">    x = <span class=\"string\">\"test2\"</span>,  </span><br><span class=\"line\">    y = <span class=\"string\">\"test3\"</span>,  </span><br><span class=\"line\">    z = <span class=\"string\">\"test5\"</span> ,</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> table_B = {</span><br><span class=\"line\">    x = <span class=\"number\">1</span>,</span><br><span class=\"line\">    y = <span class=\"number\">2</span>,</span><br><span class=\"line\">    z = <span class=\"number\">3</span>,</span><br><span class=\"line\">    {\ta = <span class=\"number\">-1</span>, a1 = <span class=\"number\">1</span>}, <span class=\"comment\">-- 索引为1</span></span><br><span class=\"line\">    {\tb = <span class=\"number\">-2</span>, b1 = <span class=\"number\">2</span>}, <span class=\"comment\">-- 索引为2</span></span><br><span class=\"line\">    {\tc = <span class=\"number\">-3</span>, c1 = <span class=\"number\">3</span>}, <span class=\"comment\">-- 索引为3</span></span><br><span class=\"line\"></span><br><span class=\"line\">    table_Data = table_A,</span><br><span class=\"line\"></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">table_B.table_Data = table_A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(table_B.y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(table_B[<span class=\"number\">1</span>].a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(table_B.table_Data.x)</span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">-1</span></span><br><span class=\"line\">test2</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"23-table嵌套思考题\">2.3 table嵌套思考题<a href=\"#23-table嵌套思考题\" title=\"2.3 table嵌套思考题\"></a></h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> Heart_Beat2     = {}</span><br><span class=\"line\">Heart_Beat2.cmd       = <span class=\"string\">\"CMD_HB_TX\"</span></span><br><span class=\"line\">Heart_Beat2.g         = <span class=\"string\">\"131\"</span></span><br><span class=\"line\">Heart_Beat2.data.tim  = <span class=\"number\">12</span></span><br><span class=\"line\">Heart_Beat2.data.volt = <span class=\"number\">4.0</span></span><br><span class=\"line\">Heart_Beat2.data.csq  = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat2.g)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat2.data.tim)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Heart_Beat2.data.csq)</span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\">c:\\users\\cqy1620\\desktop\\main.lua:<span class=\"number\">189</span>: attempt to index field <span class=\"string\">'data'</span> (a <span class=\"literal\">nil</span> value)</span><br><span class=\"line\">Stack Traceback:</span><br><span class=\"line\">        c:\\users\\cqy1620\\desktop\\main.lua:<span class=\"number\">189</span>: <span class=\"keyword\">in</span> main chunk</span><br></pre></td></tr></tbody></table></figure>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;为什么是错的呢?先思考到底是哪一步出错，哪一步可能出错。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一眼的第一个疑点就是Heart_Beat2.data是哪里来的？按写法，Heart_Beat2.data的类型是个table，所以定义一下即可。添加定义：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Heart_Beat2.data      = {}</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"三、table遍历\">三、table遍历<a href=\"#三、table遍历\" title=\"三、table遍历\"></a></h2><h3 id=\"31--数组和table区别\">3.1 数组和table区别<a href=\"#31--数组和table区别\" title=\"3.1  数组和table区别\"></a></h3><ol><li><p>初始化数组时不需要填写索引，自动从数字1开始升序标好</p></li><li><p>table可以实现数组，所以可以想成数组时table的子集</p></li><li><p>在Lua中，table既不是“值”，也不是“变量”，而是对象。可以将table想象成一种动态分配的对象，程序中仅仅有一个队它们的引用（指针）。</p></li></ol><h3 id=\"32--pairs和ipairs区别\">3.2 pairs和ipairs区别<a href=\"#32--pairs和ipairs区别\" title=\"3.2  pairs和ipairs区别\"></a></h3><p><strong>pairs</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;pairs 能遍历集合的所有元素。即 pairs 可以遍历集合中所有的 key，并且除了迭代器本身以及遍历表本身还可以返回 nil。每次遍历的输出是随机的。</p>\n<p><strong>ipairs</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;ipairs 仅遍历值，按照索引升序遍历，索引中断停止遍历。即不能返回 nil,只返回 0，若遇到 nil 则退出。只能遍历到第一个不是整数的 key。</p>\n<p><strong>总结</strong></p>\n<p>&nbsp;&nbsp;&nbsp;ipairs遍历数组、pairs遍历数组和table均可遍历所有key，但是ipairs遍历数组，只能从1开始升序、按顺序遍历出相对应key，若索引中断，则退出。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>有i就任性，i有i的想法，按顺序遍历</strong></p>\n<h3 id=\"33--pairs和ipairs例子\">3.3 pairs和ipairs例子<a href=\"#33--pairs和ipairs例子\" title=\"3.3  pairs和ipairs例子\"></a></h3><ul><li>栗子1</li></ul><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> table_A = {</span><br><span class=\"line\">\t[<span class=\"number\">1</span>] = <span class=\"string\">\"tab2\"</span>,</span><br><span class=\"line\">\t[<span class=\"number\">2</span>] = <span class=\"string\">\"tac3\"</span>,</span><br><span class=\"line\">\t[<span class=\"number\">5</span>] = <span class=\"string\">\"tad1\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(table_A) <span class=\"keyword\">do</span>  </span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(k, v)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"number\">1</span>tab2</span><br><span class=\"line\"><span class=\"number\">2</span>tac3</span><br></pre></td></tr></tbody></table></figure>\n<p><strong>原因</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;ipairs只能按升序123456…..遍历，数字不连续或者为空则退出。</p>\n<ul><li>栗子2</li></ul><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> table_A = {</span><br><span class=\"line\">\t[<span class=\"string\">\"1\"</span>] = <span class=\"string\">\"tab2\"</span>,</span><br><span class=\"line\">\t[<span class=\"number\">6</span>]   = <span class=\"string\">\"tac3\"</span>,</span><br><span class=\"line\">\t[<span class=\"number\">4</span>]   = <span class=\"string\">\"tad1\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(table_A) <span class=\"keyword\">do</span>  </span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(k, v)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></tbody></table></figure>\n<p><strong>原因</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;[“1”]类型是字符串，非数字。</p>\n<ul><li>栗子3</li></ul><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> table_A = </span><br><span class=\"line\">{<span class=\"string\">\"a\"</span>, <span class=\"string\">\"ta\"</span>,[<span class=\"number\">3</span>] = <span class=\"string\">\"no\"</span>,[<span class=\"string\">\"two\"</span>] = <span class=\"string\">\"yes\"</span>}  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(table_A ) <span class=\"keyword\">do</span>  </span><br><span class=\"line\">\t<span class=\"built_in\">print</span>( i..table_A [i] )   </span><br><span class=\"line\"><span class=\"keyword\">end</span>  </span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"number\">1</span>a</span><br><span class=\"line\"><span class=\"number\">2</span>ta</span><br><span class=\"line\"><span class=\"number\">3</span>no</span><br></pre></td></tr></tbody></table></figure>\n<p><strong>原因</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;无定义索引，则自动赋值作为索引，依次递增。</p>\n<ul><li>栗子4</li></ul><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> table_A = </span><br><span class=\"line\">{<span class=\"string\">\"a\"</span>, <span class=\"string\">\"ta\"</span>,[<span class=\"number\">3</span>] = <span class=\"string\">\"no\"</span>,<span class=\"string\">\"add\"</span>,<span class=\"string\">\"fhi\"</span>,[<span class=\"string\">\"two\"</span>] = <span class=\"string\">\"yes\"</span>}  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(table_A ) <span class=\"keyword\">do</span>  </span><br><span class=\"line\">\t<span class=\"built_in\">print</span>( i..table_A [i] )   </span><br><span class=\"line\"><span class=\"keyword\">end</span>   </span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"number\">1</span>a</span><br><span class=\"line\"><span class=\"number\">2</span>ta</span><br><span class=\"line\"><span class=\"number\">3</span>add</span><br><span class=\"line\"><span class=\"number\">4</span>fhi</span><br></pre></td></tr></tbody></table></figure>\n<p><strong>原因</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;自动赋值作为索引的优先级比手动赋值的优先级高（我们自己的猜测）</p>\n<ul><li>栗子5</li></ul><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> table_A = </span><br><span class=\"line\">{<span class=\"string\">\"a\"</span>, <span class=\"string\">\"ta\"</span>,[<span class=\"number\">3</span>] = <span class=\"string\">\"no\"</span>,<span class=\"string\">\"add\"</span>,<span class=\"string\">\"fhi\"</span>,[<span class=\"string\">\"two\"</span>] = <span class=\"string\">\"yes\"</span>}  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(table_A ) <span class=\"keyword\">do</span>  </span><br><span class=\"line\">\t<span class=\"built_in\">print</span>( i..table_A [i] )   </span><br><span class=\"line\"><span class=\"keyword\">end</span>   </span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 输出</span></span><br><span class=\"line\"><span class=\"number\">1</span>a</span><br><span class=\"line\"><span class=\"number\">2</span>ta</span><br><span class=\"line\"><span class=\"number\">3</span>add</span><br><span class=\"line\"><span class=\"number\">4</span>fhi</span><br><span class=\"line\">twoyes</span><br></pre></td></tr></tbody></table></figure>\n<p><strong>原因</strong></p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个不知道如何解释，没有找到相关的解说。</p>\n<h2 id=\"四、开发雷点\">四、开发雷点<a href=\"#四、开发雷点\" title=\"四、开发雷点\"></a></h2><ol><li><p>创建UDP后，UDP收发函数只能在所创建的文件中调用，不能再其他文件调用，否则会异常重启</p></li><li><p>上述收发函数也不能再定时器、回调函数中调用</p></li><li><p>回调函数最好越简单越好，否则会出现一些奇奇怪怪的报错</p></li><li><p>每个.lua文件最好最好留空几行，否则有些会报错</p></li><li><p>报错信息是以堆栈式打印出来，所以要从下往上看</p></li><li><p>多打log，可以用clog来打印日志，再用SecureCRT来看，事半功倍，但是这样是抓不到底层的日志</p></li><li><p>LuaTools安装目录中的log文件夹中日志要及时清理，否则一天好几个G会占很多内存空间</p></li><li><p>clog不能打印table、boolean类型</p></li><li><p>测试socket连接，IP需要用公网IP，不能用局域网</p></li><li><p>ipairs和pairs区别很重要</p></li><li><p>拨号和TTS会冲突，TTS和TTS也会有冲突，可以调用TTS的回调函数，当TTS播放成功再进行播放下一TTS</p></li><li><p>底层core几个版本的区别</p></li><li><p>require了模块，参数也定义了，但是依然报错，可以在main.lua或则在main.lua所调用的模块文件内对<br>每个人文件的变量进行调用打印一次，再删除报错就会消失。报错详情：</p><h2 id=\"五、总结\">五、总结<a href=\"#五、总结\" title=\"五、总结\"></a></h2></li></ol><p>&nbsp;&nbsp;&nbsp;&nbsp;难得这次一点都不磕磕巴巴，不知道是不是上周在摄影小哥的历练之下，我的脸皮堪比城墙，一点都不紧张。这次也算是一次成长。鸡汤总结：</p>\n<ol><li>大场子提前上个厕所，多多深呼吸，暗示自己尽全力就好</li><li>在没有很正式的场合时候，嬉皮笑脸点分享会得到更多的反馈</li><li>只有不断暴露出来的缺陷才能修炼成完美</li><li>不要过分在意别人的看法，活出自我就好，别人没空搭理你</li></ol>","prev":{"title":"有线电话通信原理及DTMF学习","link":"2020/08/15/有线电话通信原理及DTMF学习"},"next":{"title":"LabVIEW Notes","link":"2020/06/20/LabVIEW-Notes"},"plink":"http://yoursite.com/2020/07/28/Lua学习总结/"}