{"title":"RIDE安装初步测试","date":"2020-12-02T19:19:04.000Z","date_formatted":{"ll":"2020年12月2日","L":"2020/12/02","MM-DD":"12-02"},"link":"2020/12/02/RIDE安装print测试","comments":true,"tags":["RIDE"],"updated":"2021-01-25T08:44:14.461Z","content":"<a id=\"more\"></a>\n\n<h3 id=\"python安装是否成功\">python安装是否成功<a href=\"#python安装是否成功\" title=\"python安装是否成功\"></a></h3><h4 id=\"测试方法\">测试方法<a href=\"#测试方法\" title=\"测试方法\"></a></h4><ul><li>win+cmd，输入：<code>python</code></li></ul><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\Administrator&gt;python</span><br><span class=\"line\">Python 2.7.10 (default, May 23 2015, 09:44:00) [MSC v.1500 64 bit (AMD64)] on win32</span><br><span class=\"line\">Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n<h4 id=\"安装失败的解决方法\">安装失败的解决方法<a href=\"#安装失败的解决方法\" title=\"安装失败的解决方法\"></a></h4><p>可能是没有添加环境变量。将\\Python27添加到环境变量当中</p>\n<ul><li><p>右键<strong>我的电脑</strong>，点击<strong>属性 -&gt; 高级系统设置 -&gt; 系统变量 -&gt; Path -&gt; 编辑</strong></p></li><li><pre><code>{% asset_img 1.png 这是RIDE安装初步测试的图片的说明 %}\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 新建添加以下三个路径：</span><br><span class=\"line\"></span><br><span class=\"line\">  ![](image-20201207133601950-1608030530409.png)</span><br><span class=\"line\"></span><br><span class=\"line\">### pip安装是否成功</span><br><span class=\"line\"></span><br><span class=\"line\">#### 测试方法</span><br><span class=\"line\"></span><br><span class=\"line\">- 方法一：python安装路径**\\python27\\Scripts**中含有pip.exe</span><br><span class=\"line\"></span><br><span class=\"line\">  ![](image-20201207102421565-1608030321962.png)</span><br><span class=\"line\"></span><br><span class=\"line\">- 方法二：win+cmd，输入：`pip list`回车，是否含有pip</span><br><span class=\"line\"></span><br><span class=\"line\">- 方法三：</span><br></pre></td></tr></tbody></table></figure>\nC:\\Users\\Administrator&gt;pip --version\npip 20.3.1 from c:\\python27\\lib\\site-packages\\pip (python 2.7)\n\nC:\\Users\\Administrator&gt;\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 安装失败的解决方法</span><br><span class=\"line\"></span><br><span class=\"line\">- win+cmd，在下载的pip目录下输入：`python setup.py install`</span><br><span class=\"line\"></span><br><span class=\"line\">### 安装成功的库查询</span><br><span class=\"line\"></span><br><span class=\"line\">#### 查询方法</span><br><span class=\"line\"></span><br><span class=\"line\">win+cmd 输入：`pip list`，查看已经安装的插件包名字和版本，以下列出已安装库</span><br></pre></td></tr></tbody></table></figure>\nC:\\Users\\Administrator&gt;pip list\nrobotframework-archivelibrary   0.4.0\nrobotframework-ftplibrary       1.9\nrobotframework-ride             1.5\nrobotframework-selenium2library 1.7.4\nrobotframework-sshlibrary       3.5.1\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 安装方式</span><br><span class=\"line\"></span><br><span class=\"line\">在cmd中输入相关指令:</span><br><span class=\"line\"></span><br><span class=\"line\">- pip install robotframework-selenium2library</span><br><span class=\"line\">- pip install robotframework-archivelibrary</span><br><span class=\"line\">- pip install robotframework-SSHLibrary</span><br><span class=\"line\">- pip install robotframework-ftplibrary</span><br><span class=\"line\"></span><br><span class=\"line\">### wxPython</span><br><span class=\"line\"></span><br><span class=\"line\">#### 测试方法</span><br><span class=\"line\"></span><br><span class=\"line\">- win+cmd，输入：`python`</span><br><span class=\"line\">- 继续输入：`import wx`</span><br><span class=\"line\">- 结果不报错</span><br></pre></td></tr></tbody></table></figure>\nC:\\Users\\Administrator&gt;python\nPython 2.7.10 (default, May 23 2015, 09:44:00) [MSC v.1500 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import wx\n&gt;&gt;&gt;\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 结果报错了解决方法</span><br><span class=\"line\"></span><br><span class=\"line\">- 输入：`ctrl+z`退出命令交互窗口</span><br><span class=\"line\">- 继续输入：`pip  install  wxPython`</span><br><span class=\"line\">- 安装后继续用测试方法测试是否安装成功</span><br><span class=\"line\"></span><br><span class=\"line\">## RIDE快捷键及图标设置</span><br><span class=\"line\"></span><br><span class=\"line\">#### 正确例子测试</span><br><span class=\"line\"></span><br><span class=\"line\">1. 打开python安装路径：**\\python27\\Scripts**，找到**ride.py**</span><br><span class=\"line\">2. 右键**发送到（N）**，选择**桌面快捷键方式**</span><br><span class=\"line\">3. 右键桌面ride快捷键，点击**属性**，选择**更改图标**</span><br><span class=\"line\">4. 选择**\\Python27\\Lib\\site-packages\\robotide\\widgets\\robot.ico**</span><br><span class=\"line\">5. 一路**确定**，修改完毕。</span><br><span class=\"line\"></span><br><span class=\"line\">## RIDE自建库测试方法</span><br><span class=\"line\"></span><br><span class=\"line\">1. 打开python安装路径：**\\Python27\\Lib\\site-packages**（所安装的插件的库都在这里），在这个文件夹中新建一个文件夹命名为：**NewLibrary**。文件夹名字就是自建库的名字。</span><br><span class=\"line\"></span><br><span class=\"line\">2. 在文件夹**NewLibrary**中新建一个**myclass.py**(以关键字命名)文件，用于存放自定义的方法。内容为:</span><br><span class=\"line\"></span><br><span class=\"line\">   ```python</span><br><span class=\"line\">   class MyClass(object):</span><br><span class=\"line\">       def __init__(self):</span><br><span class=\"line\">           pass</span><br><span class=\"line\">    </span><br><span class=\"line\">       def printMsg(self,msg):</span><br><span class=\"line\">           print \"hello \"+msg</span><br></pre></td></tr></tbody></table></figure></code></pre></li></ul><ol><li><p>在文件夹<strong>NewLibrary</strong>中新建一个<strong>_ __init___.py</strong>(以关键字命名)文件，用于存放自定义的方法。内容为:</p></li><li><p>打开<strong>RIDE</strong>，点击<strong>File -&gt; New Project</strong>，创建项目<strong>Tesetnc</strong>：</p></li></ol><p><img src=\"image-20201207113043769-1608030339049.png\" class=\"φcy\"></p>\n<ol><li>右键左上刚创建的项目<strong>Tesetnc</strong>，右击<strong>File -&gt; New Test Case</strong>，输入测试用例名称，点击<strong>OK</strong>：</li></ol><p><img src=\"image-20201207113209992-1608030348482.png\" class=\"φcy\"></p>\n<ol><li>点击左上角项目<strong>Tesetnc</strong>，点击右侧<strong>Library</strong>，直接输入刚刚第一步新建的文件夹名称：<strong>NewLibrary</strong>。</li></ol><p><img src=\"image-20201207113634256-1608030357588.png\" class=\"φcy\"></p>\n<ol><li>注意不要输错，输错会变红，变红色就是没有找到这个库。</li></ol><p><img src=\"image-20201207114049961-1608030365992.png\" class=\"φcy\"></p>\n<ol><li>按<strong>F5</strong>，选择<strong>Source</strong>中第一步新建的库文件夹名字：<strong>NewLibrary</strong>，可以看到<strong>printMsg</strong>相关信息。</li></ol><p><img src=\"image-20201207133812946-1608030374025.png\" class=\"φcy\"></p>\n<ol><li>点击测试用例<strong>test1</strong>，在第一列输入关键字（函数），后面每一列都是入口参数。在第一个入口参数输入：<code>world</code></li></ol><p><img src=\"image-20201207114337495-1608030383986.png\" class=\"φcy\"></p>\n<ol><li>点击左上测试用例<strong>test1</strong>，点击<strong>Run-&gt;Start</strong>，开始运行。快捷键：<strong>F8</strong>。</li><li>可以看出输出结果为：<strong>hello world</strong>，验证成功。</li></ol><p><img src=\"image-20201207114608059-1608030390973.png\" class=\"φcy\"></p>\n<p>注：如果保证都没有错，但是一直都是红色，可能某个插件没有安装好，可以看ride的运行报错，按照报错进行修复。</p>\n<h4 id=\"错误例子测试\">错误例子测试<a href=\"#错误例子测试\" title=\"错误例子测试\"></a></h4><ol><li><strong>printMsg</strong>函数只有一个入口参数，手动输入两个参数：</li></ol><p><img src=\"image-20201207134153210-1608030397667.png\" class=\"φcy\"></p>\n<ol><li>运行，报错：</li></ol><p><img src=\"image-20201207134242859-1608030405097.png\" class=\"φcy\"></p>\n<ol><li>报错信息：<code>FAIL : Keyword 'NewLibrary.Print Msg' expected 1 argument, got 2.</code>NewLibrary这个库中的关键字PrintMsg只有一个入口参数，但是手动输入了两个</li></ol><h2 id=\"参考文章\">参考文章<a href=\"#参考文章\" title=\"参考文章\"></a></h2><p>【1】<a href=\"https://www.cnblogs.com/DeryKong/p/13597167.html\" target=\"_blank\">RobotFramework入门使用</a></p>\n<p>【2】<a href=\"https://www.cnblogs.com/lsdb/p/10861344.html\" target=\"_blank\">Python3+Robot Framework+RIDE安装使用教程</a></p>\n","next":{"title":"Part 2 | Lua语言基础","link":"2020/11/20/Lua语言基础2"},"plink":"http://yoursite.com/2020/12/02/RIDE安装print测试/"}